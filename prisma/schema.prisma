generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  username   String   @unique
  password   String
  profile    Profile?
  posts      Post[]   @relation("PostAuthor")
  likedPosts Like[]
  followedBy User[]   @relation("UserFollows")
  following  User[]   @relation("UserFollows")
  createdAt  DateTime @default(now())
}

model Profile {
  id         String  @id @default(uuid())
  pictureUrl String?
  bannerUrl  String?
  firstname  String
  lastname   String?
  bio        Json?
  user       User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String  @unique
}

model Post {
  id        String   @id @default(uuid())
  body      Json
  likes     Like[]
  replies   Post[]   @relation("Replies")
  authorId  String
  replyToId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  replyTo Post? @relation("Replies", fields: [replyToId], references: [id], onDelete: Cascade)
  author  User  @relation("PostAuthor", fields: [authorId], references: [id], onDelete: Cascade)
}

model Like {
  id      String   @id @default(uuid())
  userId  String
  postId  String
  likedAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}
