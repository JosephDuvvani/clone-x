generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  username      String    @unique
  password      String
  profile       Profile?
  posts         Post[]    @relation("PostAuthor")
  likedPosts    Post[]    @relation("PostLikes")
  comments      Comment[] @relation("CommentAuthor")
  likedComments Comment[] @relation("CommentLikes")
  createdAt     DateTime  @default(now())
}

model Profile {
  id         String  @id @default(uuid())
  pictureUrl String?
  bannerUrl  String?
  firstname  String
  lastname   String?
  bio        Json?
  user       User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String  @unique
}

model Post {
  id        String    @id @default(uuid())
  content   Json
  likes     User[]    @relation("PostLikes")
  comments  Comment[]
  author    User      @relation("PostAuthor", fields: [authorId], references: [id], onDelete: Cascade)
  authorId  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Comment {
  id        String   @id @default(uuid())
  content   Json
  likes     User[]   @relation("CommentLikes")
  author    User     @relation("CommentAuthor", fields: [authorId], references: [id], onDelete: Cascade)
  authorId  String
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}
